private val deltaX = intArrayOf(0, 0, -1, 1)
private val deltaY = intArrayOf(-1, 1, 0, 0)
private fun inBound(
    grid: Array<IntArray>,
    x: Int,
    y: Int
) = x >= 0 && y >= 0 && x < grid.size && y < grid[0].size


while (!queue.isEmpty()){
    for (size in 0 until queue.size){
        val current = queue.poll()
        for (index in 0..3){
            val nextX = current[0] + deltaX[index]
            val nextY = current[1] + deltaY[index]
            if (inBound(grid, nextX, nextY) &&
                !visited[nextX][nextY] &&
                grid[nextX][nextY] == 0
            ) {
                queue.offer(intArrayOf(nextX, nextY))
                visited[nextX][nextY] = true
            }
        }
    }
    ++level
}

